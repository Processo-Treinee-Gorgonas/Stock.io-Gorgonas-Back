// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id Int @id @default(autoincrement())
  userName String @db.VarChar(50) @unique
  nome String @db.VarChar(255)
  email String @db.VarChar(255) @unique
  senhaHash String @db.VarChar(255)
  fotoPerfil String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lojas Loja[]
}

model Loja {
  id Int @id @default(autoincrement())
  usuarioId Int
  categoriaId Int
  nome String @db.VarChar(255) @unique
  descricao String @db.Text
  logo String?
  banner String?
  sticker String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  produtos Produto []
  usuario Usuarios @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoria Categoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Categoria {
  id Int @id @default(autoincrement())
  nome CategoriasNome @unique
  lojas Loja[]
  subcategorias Subcategoria []
}

enum CategoriasNome{
  MERCADO
  FARMACIA
  BELEZA
  MODA
  ELETRONICOS
  JOGOS
  BRINQUEDOS
  CASA
}

model Subcategoria {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(100)
  categoriaId Int
  produtos Produto []
  categoria Categoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  @@unique([nome, categoriaId])
}

model Produto {
  id Int @id @default(autoincrement())
  lojaId Int
  subcategoriaId Int
  nome String @db.VarChar(255)
  descricao String @db.Text
  preco Decimal @db.Decimal(10, 2)
  estoque Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  loja Loja @relation(fields: [lojaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subcategoria Subcategoria @relation(fields: [subcategoriaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}